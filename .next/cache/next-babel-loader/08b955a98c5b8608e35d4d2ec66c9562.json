{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* pages/index.js */\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pusher from \"pusher-js\";\nimport Layout from \"../components/Layout\";\nimport ChoosePersona from \"../componenets/ChoosePersona\";\n\nvar IndexPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IndexPage, _Component);\n\n  function IndexPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IndexPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      id: null,\n      people: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"endConnection\", function () {\n      _this.pusher.disconnect();\n\n      axios.post(\"/offline/\".concat(_this.state.id));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"personaSelected\", function (id) {\n      _this.setState({\n        id: id\n      });\n\n      axios.post(\"/online/\".concat(id));\n    });\n\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"componentWillMount\",\n\n    /**\n     * *Life cycle method\n     * Sets up subscription to pusher map-geofencing channel\n     */\n    value: function componentWillMount() {\n      this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n        cluster: process.env.PUSHER_APP_CLUSTER,\n        encrypted: true\n      });\n      this.channel = this.pusher.subscribe(\"map-geofencing\");\n    }\n    /**\n     * *Life cycle methode\n     * Makes req to people route and set the state\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/people\").then(function (_ref) {\n        var data = _ref.data;\n        var _data$people = data.people,\n            people = _data$people === void 0 ? [] : _data$people;\n\n        _this2.setState({\n          people: people\n        });\n      });\n      window.onbeforeunload = this.endConnection;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.endConnection();\n    }\n    /**\n     * Sends online request to activate user :id\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          id = _this$state.id,\n          people = _this$state.people;\n      var person = people.find(function (person) {\n        return person.id === id;\n      }) || {};\n      var peopleOffline = people.filter(function (person) {\n        return !person.online;\n      });\n      return __jsx(Layout, {\n        pageTitle: \"Realtime Geofencing\"\n      }, __jsx(\"main\", {\n        className: \"container-fluid position-absolute h-100 bg-light\"\n      }, id ? __jsx(\"div\", {\n        className: \"row position-absolute w-100 h-100\"\n      }) : __jsx(ChoosePersona, {\n        count: 5,\n        people: peopleOffline,\n        onSelected: this.personaSelected\n      })));\n    }\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport default (function () {\n  return __jsx(IndexPage, null);\n});","map":{"version":3,"sources":["/home/aliang/lighthouse/practice/pusherGeofencingTutorial/pages/index.js"],"names":["React","Component","Fragment","axios","Pusher","Layout","ChoosePersona","IndexPage","id","people","pusher","disconnect","post","state","setState","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","encrypted","channel","subscribe","get","then","data","window","onbeforeunload","endConnection","person","find","peopleOffline","filter","online","personaSelected"],"mappings":";;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;IAEMC,S;;;;;;;;;;;;;;;;;;4DACI;AAAEC,MAAAA,EAAE,EAAE,IAAN;AAAYC,MAAAA,MAAM,EAAE;AAApB,K;;oEAKQ,YAAM;AACpB,YAAKC,MAAL,CAAYC,UAAZ;;AACAR,MAAAA,KAAK,CAACS,IAAN,oBAAuB,MAAKC,KAAL,CAAWL,EAAlC;AACD,K;;sEAmCiB,UAAAA,EAAE,EAAI;AACtB,YAAKM,QAAL,CAAc;AAAEN,QAAAA,EAAE,EAAFA;AAAF,OAAd;;AACAL,MAAAA,KAAK,CAACS,IAAN,mBAAsBJ,EAAtB;AACD,K;;;;;;;;AApCD;;;;yCAIqB;AACnB,WAAKE,MAAL,GAAc,IAAIN,MAAJ,CAAWW,OAAO,CAACC,GAAR,CAAYC,cAAvB,EAAuC;AACnDC,QAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,kBAD8B;AAEnDC,QAAAA,SAAS,EAAE;AAFwC,OAAvC,CAAd;AAKA,WAAKC,OAAL,GAAe,KAAKX,MAAL,CAAYY,SAAZ,CAAsB,gBAAtB,CAAf;AACD;AAED;;;;;;;wCAIoB;AAAA;;AAClBnB,MAAAA,KAAK,CAACoB,GAAN,CAAU,SAAV,EAAqBC,IAArB,CAA0B,gBAAc;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAAA,2BACdA,IADc,CAC9BhB,MAD8B;AAAA,YAC9BA,MAD8B,6BACrB,EADqB;;AAEtC,QAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,UAAAA,MAAM,EAANA;AAAF,SAAd;AACD,OAHD;AAKAiB,MAAAA,MAAM,CAACC,cAAP,GAAwB,KAAKC,aAA7B;AACD;;;2CAEsB;AACrB,WAAKA,aAAL;AACD;AAED;;;;;;6BAQS;AAAA,wBACgB,KAAKf,KADrB;AAAA,UACCL,EADD,eACCA,EADD;AAAA,UACKC,MADL,eACKA,MADL;AAEP,UAAMoB,MAAM,GAAGpB,MAAM,CAACqB,IAAP,CAAY,UAAAD,MAAM;AAAA,eAAIA,MAAM,CAACrB,EAAP,KAAcA,EAAlB;AAAA,OAAlB,KAA2C,EAA1D;AACA,UAAMuB,aAAa,GAAGtB,MAAM,CAACuB,MAAP,CAAc,UAAAH,MAAM;AAAA,eAAI,CAACA,MAAM,CAACI,MAAZ;AAAA,OAApB,CAAtB;AAEA,aACE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC;AAAlB,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGzB,EAAE,GACD;AAAK,QAAA,SAAS,EAAC;AAAf,QADC,GAGD,MAAC,aAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,MAAM,EAAEuB,aAFV;AAGE,QAAA,UAAU,EAAE,KAAKG;AAHnB,QAJJ,CADF,CADF;AAeD;;;;EArEqBjC,S;;AAwExB,gBAAe;AAAA,SAAM,MAAC,SAAD,OAAN;AAAA,CAAf","sourcesContent":["/* pages/index.js */\n\nimport React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport Pusher from \"pusher-js\";\nimport Layout from \"../components/Layout\";\nimport ChoosePersona from \"../componenets/ChoosePersona\";\n\nclass IndexPage extends Component {\n  state = { id: null, people: [] };\n\n  /**\n   * Ends pusher connection and and sends a /offline req to server for the current user\n   */\n  endConnection = () => {\n    this.pusher.disconnect();\n    axios.post(`/offline/${this.state.id}`);\n  };\n\n  /**\n   * *Life cycle method\n   * Sets up subscription to pusher map-geofencing channel\n   */\n  componentWillMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      encrypted: true\n    });\n\n    this.channel = this.pusher.subscribe(\"map-geofencing\");\n  }\n\n  /**\n   * *Life cycle methode\n   * Makes req to people route and set the state\n   */\n  componentDidMount() {\n    axios.get(\"/people\").then(({ data }) => {\n      const { people = [] } = data;\n      this.setState({ people });\n    });\n\n    window.onbeforeunload = this.endConnection;\n  }\n\n  componentWillUnmount() {\n    this.endConnection();\n  }\n\n  /**\n   * Sends online request to activate user :id\n   */\n  personaSelected = id => {\n    this.setState({ id });\n    axios.post(`/online/${id}`);\n  };\n\n  render() {\n    const { id, people } = this.state;\n    const person = people.find(person => person.id === id) || {};\n    const peopleOffline = people.filter(person => !person.online);\n\n    return (\n      <Layout pageTitle=\"Realtime Geofencing\">\n        <main className=\"container-fluid position-absolute h-100 bg-light\">\n          {id ? (\n            <div className=\"row position-absolute w-100 h-100\"></div>\n          ) : (\n            <ChoosePersona\n              count={5}\n              people={peopleOffline}\n              onSelected={this.personaSelected}\n            />\n          )}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default () => <IndexPage />;\n"]},"metadata":{},"sourceType":"module"}