{"ast":null,"code":"var __jsx = React.createElement;\n\n/* components/ChoosePersona.js */\n//*Componenet allwos up to activeate a selected user\nimport React from 'react';\n\nvar ChoosePersona = function ChoosePersona(props) {\n  var _props$people = props.people,\n      people = _props$people === void 0 ? [] : _props$people,\n      _props$count = props.count,\n      count = _props$count === void 0 ? 3 : _props$count,\n      _props$onSelected = props.onSelected,\n      onSelected = _props$onSelected === void 0 ? function (f) {\n    return f;\n  } : _props$onSelected;\n  var nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  var choosePersona = function choosePersona(id) {\n    return function (evt) {\n      return onSelected(id);\n    };\n  };\n\n  var randomPeople = function randomPeople(count) {\n    return function (people) {\n      var selected = []; // Andy Is always in selected\n      //selected.push(props.people[0])\n\n      var i = 0;\n      count = Math.max(0, Math.min(count, people.length));\n\n      while (i < count) {\n        var index = Math.floor(Math.random() * people.length);\n        if (selected.includes(index)) continue;\n        ++i && selected.push(index);\n      }\n\n      return selected.map(function (index) {\n        var _people$index = people[index],\n            id = _people$index.id,\n            name = _people$index.name;\n        var className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n        return __jsx(\"span\", {\n          key: index,\n          className: className,\n          style: nameBadgeStyles,\n          title: name,\n          onClick: choosePersona(id)\n        }, name);\n      });\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\"\n  }, __jsx(\"span\", {\n    className: \"h3 text-dark text-center py-3 w-100 font-weight-bold\"\n  }, \"Choose your Persona\"), \"debugger\", randomPeople(count)(people));\n};\n\nexport default ChoosePersona;","map":{"version":3,"sources":["/home/aliang/lighthouse/practice/pusherGeofencingTutorial/componenets/ChoosePersona.js"],"names":["React","ChoosePersona","props","people","count","onSelected","f","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","id","evt","randomPeople","selected","i","Math","max","min","length","index","floor","random","includes","push","map","name","className"],"mappings":";;AAAA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,sBAE2BA,KAF3B,CAErBC,MAFqB;AAAA,MAErBA,MAFqB,8BAEZ,EAFY;AAAA,qBAE2BD,KAF3B,CAERE,KAFQ;AAAA,MAERA,KAFQ,6BAEA,CAFA;AAAA,0BAE2BF,KAF3B,CAEGG,UAFH;AAAA,MAEGA,UAFH,kCAEgB,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFjB;AAI7B,MAAMC,eAAe,GAAG;AACtBC,IAAAA,QAAQ,EAAE,QADY;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,YAAY,EAAE,EAHQ;AAItBC,IAAAA,MAAM,EAAE;AAJc,GAAxB;;AAOA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,EAAE;AAAA,WAAI,UAAAC,GAAG;AAAA,aAAIT,UAAU,CAACQ,EAAD,CAAd;AAAA,KAAP;AAAA,GAAxB;;AAEA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAX,KAAK;AAAA,WAAI,UAAAD,MAAM,EAAI;AAEtC,UAAMa,QAAQ,GAAG,EAAjB,CAFsC,CAGtC;AACA;;AACA,UAAIC,CAAC,GAAG,CAAR;AAEAb,MAAAA,KAAK,GAAGc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAAShB,KAAT,EAAgBD,MAAM,CAACkB,MAAvB,CAAZ,CAAR;;AAEA,aAAOJ,CAAC,GAAGb,KAAX,EAAkB;AAChB,YAAMkB,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,KAAgBrB,MAAM,CAACkB,MAAlC,CAAd;AACA,YAAIL,QAAQ,CAACS,QAAT,CAAkBH,KAAlB,CAAJ,EAA8B;AAC9B,UAAEL,CAAF,IAAOD,QAAQ,CAACU,IAAT,CAAcJ,KAAd,CAAP;AACD;;AAED,aAAON,QAAQ,CAACW,GAAT,CAAa,UAAAL,KAAK,EAAI;AAAA,4BACNnB,MAAM,CAACmB,KAAD,CADA;AAAA,YACnBT,EADmB,iBACnBA,EADmB;AAAA,YACfe,IADe,iBACfA,IADe;AAE3B,YAAMC,SAAS,GAAG,oGAAlB;AAEA,eAAO;AAAM,UAAA,GAAG,EAAEP,KAAX;AAAkB,UAAA,SAAS,EAAEO,SAA7B;AAAwC,UAAA,KAAK,EAAEtB,eAA/C;AAAgE,UAAA,KAAK,EAAEqB,IAAvE;AAA6E,UAAA,OAAO,EAAGhB,aAAa,CAACC,EAAD;AAApG,WAA4Ge,IAA5G,CAAP;AACD,OALM,CAAP;AAOD,KAtByB;AAAA,GAA1B;;AAuBA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,2BADF,cAGIb,YAAY,CAACX,KAAD,CAAZ,CAAoBD,MAApB,CAHJ,CADF;AAOD,CA3CD;;AA6CA,eAAeF,aAAf","sourcesContent":["/* components/ChoosePersona.js */ \n\n//*Componenet allwos up to activeate a selected user\n\nimport React from 'react';\n\nconst ChoosePersona = props => {\n\n  const { people = [], count = 3, onSelected = f => f } = props;\n\n  const nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  const choosePersona = id => evt => onSelected(id);\n\n  const randomPeople = count => people => {\n\n    const selected = [];\n    // Andy Is always in selected\n    //selected.push(props.people[0])\n    let i = 0;\n\n    count = Math.max(0, Math.min(count, people.length));\n\n    while (i < count) {\n      const index = Math.floor(Math.random() * people.length);\n      if (selected.includes(index)) continue;\n      ++i && selected.push(index);\n    }\n\n    return selected.map(index => {\n      const { id, name } = people[index];\n      const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n      return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n    });\n\n  };\n  return (\n    <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n      <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Choose your Persona</span>\n      debugger\n      { randomPeople(count)(people) }\n    </div>\n  );\n};\n\nexport default ChoosePersona;"]},"metadata":{},"sourceType":"module"}