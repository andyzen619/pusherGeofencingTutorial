{"ast":null,"code":"var __jsx = React.createElement;\n\n/* components/ChoosePersona.js */\n//*Componenet allwos up to activeate a selected user\nimport React from 'react';\n\nconst ChoosePersona = props => {\n  const {\n    people = [],\n    count = 3,\n    onSelected = f => f\n  } = props;\n  const nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  const choosePersona = id => evt => onSelected(id);\n\n  const randomPeople = count => people => {\n    const selected = []; // Andy Is always in selected\n\n    selected.push(props.people[0]);\n    let i = 0;\n    count = Math.max(0, Math.min(count, people.length));\n\n    while (i < count) {\n      const index = Math.floor(Math.random() * people.length);\n      if (selected.includes(index)) continue;\n      ++i && selected.push(index);\n    }\n\n    return selected.map(index => {\n      const {\n        id,\n        name\n      } = people[index];\n      const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n      return __jsx(\"span\", {\n        key: index,\n        className: className,\n        style: nameBadgeStyles,\n        title: name,\n        onClick: choosePersona(id)\n      }, name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\"\n  }, __jsx(\"span\", {\n    className: \"h3 text-dark text-center py-3 w-100 font-weight-bold\"\n  }, \"Choose your Persona\"), randomPeople(count)(people));\n};\n\nexport default ChoosePersona;","map":{"version":3,"sources":["/home/aliang/lighthouse/practice/pusherGeofencingTutorial/componenets/ChoosePersona.js"],"names":["React","ChoosePersona","props","people","count","onSelected","f","nameBadgeStyles","fontSize","height","borderRadius","cursor","choosePersona","id","evt","randomPeople","selected","push","i","Math","max","min","length","index","floor","random","includes","map","name","className"],"mappings":";;AAAA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B,QAAM;AAAEC,IAAAA,MAAM,GAAG,EAAX;AAAeC,IAAAA,KAAK,GAAG,CAAvB;AAA0BC,IAAAA,UAAU,GAAGC,CAAC,IAAIA;AAA5C,MAAkDJ,KAAxD;AAEA,QAAMK,eAAe,GAAG;AACtBC,IAAAA,QAAQ,EAAE,QADY;AAEtBC,IAAAA,MAAM,EAAE,EAFc;AAGtBC,IAAAA,YAAY,EAAE,EAHQ;AAItBC,IAAAA,MAAM,EAAE;AAJc,GAAxB;;AAOA,QAAMC,aAAa,GAAGC,EAAE,IAAIC,GAAG,IAAIT,UAAU,CAACQ,EAAD,CAA7C;;AAEA,QAAME,YAAY,GAAGX,KAAK,IAAID,MAAM,IAAI;AAEtC,UAAMa,QAAQ,GAAG,EAAjB,CAFsC,CAItC;;AACAA,IAAAA,QAAQ,CAACC,IAAT,CAAcf,KAAK,CAACC,MAAN,CAAa,CAAb,CAAd;AACA,QAAIe,CAAC,GAAG,CAAR;AAEAd,IAAAA,KAAK,GAAGe,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAASjB,KAAT,EAAgBD,MAAM,CAACmB,MAAvB,CAAZ,CAAR;;AAEA,WAAOJ,CAAC,GAAGd,KAAX,EAAkB;AAChB,YAAMmB,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,KAAgBtB,MAAM,CAACmB,MAAlC,CAAd;AACA,UAAIN,QAAQ,CAACU,QAAT,CAAkBH,KAAlB,CAAJ,EAA8B;AAC9B,QAAEL,CAAF,IAAOF,QAAQ,CAACC,IAAT,CAAcM,KAAd,CAAP;AACD;;AAED,WAAOP,QAAQ,CAACW,GAAT,CAAaJ,KAAK,IAAI;AAC3B,YAAM;AAAEV,QAAAA,EAAF;AAAMe,QAAAA;AAAN,UAAezB,MAAM,CAACoB,KAAD,CAA3B;AACA,YAAMM,SAAS,GAAG,oGAAlB;AAEA,aAAO;AAAM,QAAA,GAAG,EAAEN,KAAX;AAAkB,QAAA,SAAS,EAAEM,SAA7B;AAAwC,QAAA,KAAK,EAAEtB,eAA/C;AAAgE,QAAA,KAAK,EAAEqB,IAAvE;AAA6E,QAAA,OAAO,EAAGhB,aAAa,CAACC,EAAD;AAApG,SAA4Ge,IAA5G,CAAP;AACD,KALM,CAAP;AAOD,GAvBD;;AAyBA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,2BADF,EAEIb,YAAY,CAACX,KAAD,CAAZ,CAAoBD,MAApB,CAFJ,CADF;AAMD,CA5CD;;AA8CA,eAAeF,aAAf","sourcesContent":["/* components/ChoosePersona.js */ \n\n//*Componenet allwos up to activeate a selected user\n\nimport React from 'react';\n\nconst ChoosePersona = props => {\n\n  const { people = [], count = 3, onSelected = f => f } = props;\n\n  const nameBadgeStyles = {\n    fontSize: '0.8rem',\n    height: 40,\n    borderRadius: 20,\n    cursor: 'pointer'\n  };\n\n  const choosePersona = id => evt => onSelected(id);\n\n  const randomPeople = count => people => {\n\n    const selected = [];\n\n    // Andy Is always in selected\n    selected.push(props.people[0])\n    let i = 0;\n\n    count = Math.max(0, Math.min(count, people.length));\n\n    while (i < count) {\n      const index = Math.floor(Math.random() * people.length);\n      if (selected.includes(index)) continue;\n      ++i && selected.push(index);\n    }\n\n    return selected.map(index => {\n      const { id, name } = people[index];\n      const className = 'd-flex align-items-center text-center text-white bg-secondary font-weight-bold py-2 px-4 mx-1 my-2';\n\n      return <span key={index} className={className} style={nameBadgeStyles} title={name} onClick={ choosePersona(id) }>{name}</span>\n    });\n\n  };\n\n  return (\n    <div className=\"w-100 h-100 px-3 pb-5 d-flex flex-wrap align-items-center align-content-center justify-content-center\">\n      <span className=\"h3 text-dark text-center py-3 w-100 font-weight-bold\">Choose your Persona</span>\n      { randomPeople(count)(people) }\n    </div>\n  );\n};\n\nexport default ChoosePersona;"]},"metadata":{},"sourceType":"module"}